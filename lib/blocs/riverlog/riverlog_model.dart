import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:equatable/equatable.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedRiverlog {
  final List<RiverlogModel> results;

  AutogeneratedRiverlog({this.results});

  factory AutogeneratedRiverlog.fromJson(Map<String, dynamic> json) {
    List<RiverlogModel> temp;
    if (json['results'] != null) {
      temp = <RiverlogModel>[];
      json['results'].forEach((v) {
        temp.add(RiverlogModel.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedRiverlog(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (results != null) {
      data['results'] = results.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class SwimmerLog extends Equatable {
  final String swimmerId;
  final String rescuerId;
  SwimmerLog(this.swimmerId, this.rescuerId);
  @override
  // TODO: implement props
  List<Object> get props => [swimmerId, rescuerId];
}

class RiverlogModel extends Equatable {
  final String id;
  final String riverbetaId;
  final String tripId;
  final String userId;
  final bool didSwim;
  final bool didRescue;
  final List<String> swimmerRescued;
  final List<String> rescuedBy;
  final String note;
  final int enjoyment; // rating of enjoyment 1-5

  RiverlogModel(
      this.id,
      this.riverbetaId,
      this.tripId,
      this.userId,
      this.didSwim,
      this.didRescue,
      this.swimmerRescued,
      this.rescuedBy,
      this.note,
      this.enjoyment);

  @override
  List<Object> get props => [
        id,
        riverbetaId,
        tripId,
        userId,
        didSwim,
        didRescue,
        swimmerRescued,
        rescuedBy,
        note,
        enjoyment
      ];

  factory RiverlogModel.fromJson(Map<String, dynamic> json) {
    return RiverlogModel(
        json['id'] as String,
        json['riverbetaId'] as String,
        json['tripId'] as String,
        json['userId'] as String,
        json['didSwim'] as bool,
        json['didRescue'] as bool,
        json['swimmerRescued'] as List<String>,
        json['rescuedBy'] as List<String>,
        json['note'] as String,
        json['enjoyment'] as int);
  }

  factory RiverlogModel.fromFire(DocumentSnapshot doc) {
    var json = doc.data();
    return RiverlogModel(
        doc.id,
        json['riverbetaId'] as String,
        json['tripId'] as String,
        json['userId'] as String,
        json['didSwim'] as bool,
        json['didRescue'] as bool,
        json['swimmerRescued'] as List<String>,
        json['rescuedBy'] as List<String>,
        json['note'] as String,
        json['enjoyment'] as int);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['riverbetaId'] = riverbetaId;
    data['tripId'] = tripId;
    data['userId'] = userId;
    data['didSwim'] = didSwim;
    data['didRescue'] = didRescue;
    data['swimmerRescued'] = swimmerRescued;
    data['rescuedBy'] = rescuedBy;
    data['note'] = note;
    data['enjoyment'] = enjoyment;
    return data;
  }
}
