import 'package:equatable/equatable.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedHashtag {
  final List<HashtagModel> results;

  AutogeneratedHashtag({this.results});

  factory AutogeneratedHashtag.fromJson(Map<String, dynamic> json) {
    List<HashtagModel> temp;
    if (json['results'] != null) {
      temp = <HashtagModel>[];
      json['results'].forEach((v) {
        temp.add(HashtagModel.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedHashtag(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (results != null) {
      data['results'] = results.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class ExtObjectLink extends Equatable {
  final String thumbnail;
  final String caption;
  final String url;
  ExtObjectLink(this.thumbnail, this.caption, this.url);
  @override
  // TODO: implement props
  List<Object> get props => [thumbnail, caption, url];

  factory ExtObjectLink.fromJson(Map<String, dynamic> json) {
    return ExtObjectLink(
        json['thumbnail'] as String, json['caption'], json['url'] as String);
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['thumbnail'] = thumbnail;
    data['caption'] = caption;
    data['url'] = url;
    return data;
  }
}

class HashtagModel extends Equatable {
  final String hashtag;

  List<ExtObjectLink> relatedVideos;
  final DateTime lastFetchVideos;

  HashtagModel(this.hashtag, this.relatedVideos, this.lastFetchVideos);

  @override
  List<Object> get props => [hashtag, relatedVideos, lastFetchVideos];

  factory HashtagModel.fromJson(Map<String, dynamic> json) {
    return HashtagModel(
        json['hashtag'] as String,
        (json['relatedVideos'] == null)
            ? List<ExtObjectLink>()
            : json['relatedVideos']
                .map<ExtObjectLink>((e) => ExtObjectLink.fromJson(e))
                .toList(),
        (json['lastFetchVideos'] == null)
            ? null
            : json['lastFetchVideos'].toDate());
  }
  factory HashtagModel.fromFire(DocumentSnapshot doc) {
    var json = doc.data();
    return HashtagModel(
        doc.id,
        (json['relatedVideos'] == null)
            ? List<ExtObjectLink>()
            : json['relatedVideos']
                .map<ExtObjectLink>((e) => ExtObjectLink.fromJson(e))
                .toList(),
        (json['lastFetchVideos'] == null)
            ? null
            : json['lastFetchVideos'].toDate());
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    //data['hashtag'] = hashtag;
    data['relatedVideos'] = relatedVideos.map((e) => e.toJson()).toList();
    data['lastFetchVideos'] = lastFetchVideos;
    return data;
  }
}
